Adicionar Spring Security

1 - Entidade user ja existe com os campos user e pass, no caso e-mail e password
2 - Criar a entidade Role
    Long id
    String authority
    Construtor sem argumentos
    Construtor com argumentos
    getters e setters
    equals e hashcode (campo authority)
3 - Mapear o JPA do Role
    Entity
    Table (tb_roles)
4 - Mapear o N-N no User do Role
    Set<Role> roles = new ...
    MayToMany
    JoinTable=tb_user_role,joinColumns=user_id,inverseJoinColumns=role_id
5 - Criar metodo void addRole
    roles.add(role)
6 - Criar metodo boolean hasRole(String roleName)
    for (Role role :  roles)
        if (role.getAuthority.equals(roleName))
            return true;
7 - Verificar a criacao da tabela e do relacionamento
8 - Adicionar ao seed as roles apos os usuarios
    Observar o padrao do spring ROLE_...

9 - Criar uma classe (pkg /config) de configuracao (@Configuration) SecurityConfig com um metodo (@Bean) para liberar os endpoints para desenvolvimento.

10 - BCrypt - disponibilizar componente para injetar um PasswordEncoder na applicacao.
    criar um metodo @Bean do tipo PasswordEncoder getPasswordEncoder() return new BCryptPasswordEncoder();
11 - Na classe principal
    Injetar o component PasswordEncoder
    Testar com implements CommandLineRunner
    syso -> passwordEncode("123456")
    adicionar o hash no seed no lugar da senha

Checklist Spring Security
12 - Implementar GrantedAuthority e Serializable na classe Role
12.1 - Override em getAuthority()
13 - Implementar UserDetails na classe User
13.1 - Implementar metodos e retornar TRUE para eles
13.2 - getUsername() retorna o email
13.3 - getAuthorities() retorna roles
14 - Implementar component service UserDetailsService.loadUserByUsername
15 - Nova classe @Service UserService implements UserDetailsService
    Implementar metodo / Exception UsernameNotFoundException
16 - Liberar o acesso ao frame do banco H2
17 - Criar interface UserDetailsProjection
    String getUsername();
	String getPassword();
	Long getRoleId();
	String getAuthority();
18 - Criar interface UserRepository
    Buscar usuario e roles por email :
    adicionar metodo para retornar uma lista da projection a partir de uma native-query passando o e-mail do usuario
19 - 